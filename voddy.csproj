<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <AssemblyVersion>1.0.0</AssemblyVersion>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Hangfire" Version="1.7.19" />
        <PackageReference Include="Hangfire.AspNetCore" Version="1.7.19" />
        <PackageReference Include="Hangfire.Core" Version="1.7.19" />
        <PackageReference Include="Hangfire.LiteDB" Version="0.4.0" />
        <PackageReference Include="Hangfire.MemoryStorage" Version="1.7.0" />
        <PackageReference Include="Hangfire.PostgreSql" Version="1.8.2" />
        <PackageReference Include="Hangfire.Storage.SQLite" Version="0.3.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.3" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.3" />
        <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
        <PackageReference Include="NLog.Web.AspNetCore" Version="4.12.0" />
        <PackageReference Include="Npgsql" Version="5.0.4" />
        <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="5.0.2" />
        <PackageReference Include="Quartz.AspNetCore" Version="3.3.3" />
        <PackageReference Include="Quartz46.Serialization.Json" Version="3.0.9" />
        <PackageReference Include="RestSharp" Version="106.11.7" />
        <PackageReference Include="SQLite" Version="3.13.0" />
        <PackageReference Include="System.Data.SQLite.Core" Version="1.0.115" />
        <PackageReference Include="Xabe.FFmpeg" Version="4.4.0" />
        <PackageReference Include="Xabe.FFmpeg.Downloader" Version="4.4.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\images" />
      <Folder Include="Data" />
      <Folder Include="Logic" />
      <Folder Include="src\Tests" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
